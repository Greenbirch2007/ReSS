

创建文件HelloWorld.java(文件名需与类名一致)

输出字符串使用String[] args

java用于编译---> .class文件
java后面跟着java文件中的类名, 执行类名


java的体系

J2SE   J2EE  J2ME


java语言的特性

1. java不使用指针,而是引用,并提供自动的废料收集

2. java面向对象的

java语言提供类,接口和继承等面向对象的特性,只支持类之间的
单继承,但支持接口之间的多继承,并支持类与接口之间的实现机制(关键字为implements)
java语言全面支持动态绑定,而c++语言只对虚函数使用动态绑定.



3.java是分布式的


java支持Internet应用的开发,在基本的Java应用编程接口中有一个网络应用编程接口
(java net),它提供了用于网络应用编程的类库,包括URL,URLConnection,Socket,
ServerSocket等
java的RMI(远程方法激活)机制也是开发分布式应用的重要手段

4.java是健壮的

java的强类型机制,异常处理,垃圾的自动收集的等是java程序健壮性的保证
对指针的丢弃是Java的明智选择.还有安全检查机制

5.java是安全的

6.java是体系结构中立的

java程序(后续为java的文件)在Java平台上被编译为体系结构中立的字节码格式(后缀为
class的文件),然后可以在实现这个Java平台的任何系统中运行.

7.java是可移植的
8. java是解释型的

java程序在Java平台上被编译为字节码格式,然后可以在实现这个Java平台的任何系统中运行
在运行时,Java平台上的Java解释器对这些字节码进行解释执行,执行过程中需要的类在
联接阶段被载入到运行环境中

9.java是高性能的

10. java是多线程的


在ava语言中,线程是一种特殊的对象,它必须由Thread类或其子(孙)类来创建

通常有两种方法来创建线程:第一,使用型构为Thread(Runnable)的构造子类将一个
实现了Runnable接口的对象包包装成一个线程,第二,从Thread类派生出子类并重写run方法

使用该子类创建的对象即为线程.

指的值得注意的是Thread类已经实现了Runnable接口,因此,任何一个线程均有
它的run方法,而run方法中包含了线程所要运行的代码.
线程的活动由一组方法来控制.java语言支持多个线程的同时自行,并提供多线程之间的
同步机制(关键字为synchronized)


10.java是动态的

java语言的设计目标之一是适应于动态变化的环境.java程序需要的类能够动态地被载入到运行环境
,也可以通过网络来载入所需要的类.
这也有利于软件的升级.java中的类有一个运行时刻的表示
能进行运行时刻的类型检查


java基础语法
一个java程序可以认为是一系列对象的集合,而这些对象通过调用彼此的方法来协同工作.

对象  类   方法  实例变量

对象:对象是类的一个实例,有状态和行为
类:类是一个模板,它描述一类对象的行为和状态
方法:方法就是行为,一个类可以有很多方法.逻辑运算,数据修改以及所有动作都是在方法中完成的

实例变量:每个对象都有独特的实例变量,对象的状态由这些实例变量的值绝决定

基本语法


大小写敏感,类名,首字母大写 
对于所有的类来说,类名的首字母应该大写.如果类名由若干单词组成,那么每个单词的首字母应该大写,
例如MyFirstJavaClass
方法名:所有的方法名都应该以小写字母开头.如果方法名含有若干单词,则后面的每个单词首字母大写

源文件名:源文件名必须和类名相同.当保存文件的时候,应该使用类名作为文件名保存,文件名的后缀为.java(如果文件名和类名不相同则会导致编译错误)
主方法入口:所有的java程序由public static void main(String []args)方法开始执行


Java标识符

java所有的组成部分都需要名字.类名,变量名以及方法名都被称为标识符

所有的标识符都应该以字母(A-Z或a-z)美元符($),或下划线(_)开始
首字符之后可以是字母,美元符,下划线或数字的任何字符组合
关键字不能用作标识符
标识符是大小写敏感的
合法标识符举例:age,$salary,_value,__1_value

java修饰符


java可以使用修饰符来修饰类中方法和属性.主要有两类修饰符:

访问控制修饰符:deault,public,protected,private


非访问控制修饰符:final,abstract,static,synchronized


java变量



Java中主要有如下几种类型的变量
局部变量
类变量(静态变量)
成员变量(非静态变量)


Java数组


数组是存储在堆上的对象,可以保存多个同类型变量.
如何声明,构造以及初始化一个数组


Java枚举

枚举限制变量只能是预先设定好的值.使用枚举可以介绍代码中的bug


枚举可以单独声明或声明在类里面.方法,变量,构造函数也可以在枚举中定义

Java关键字


private 私有的(访问控制)
protected 受保护的(访问控制)
public 公共的(访问控制)
default 默认(访问控制)


abstrace 声明抽象(类,方法和变量修饰符)

class 类(类,方法和变量修饰符)


extends 扩充,继承(类,方法和变量修饰符)

final 最终值,不可改变的(类,方法和变量修饰符)


implements 实现(接口)(类,方法和变量修饰符)
interface 接口(类,方法和变量修饰符)

native 本地,原生方法(非java实现)(类,方法和变量修饰符)
new 新,创建(类,方法和变量修饰符)

static 静态(类,方法和变量修饰符)

strictfp 严格,精准(类,方法和变量修饰符)

synchronized 线程,同步(类,方法和变量修饰符)

transient 短暂(类,方法和变量修饰符)

volatile 易失(类,方法和变量修饰符)

break  跳出循环(程序控制语句)

case 定义一个值以供switch选择(程序控制语句)
continue 继续(程序控制语句)
default 默认(程序控制语句)

do 运行 (程序控制语句)
else 否则(程序控制语句)
for 循环(程序控制语句)
if 如果(程序控制语句)
instanceof 实例(程序控制语句)



return 返回(程序控制语句)

switch 据值选择执行(程序控制语句)
while 循环(程序控制语句)



assert 断言表达是否为真(错误处理)
catch 捕获异常(错误处理)
finally  有没有异常都执行(错误处理)
throw 抛出一个异常对象(错误处理)
throws 声明一个异常可能被抛出(错误处理)

try 捕获异常


import 引入(包相关)
package 包(包相关)


boolean 布尔型(基本类型)
byte 字节型(基本类型)
char 字符型(基本类型)
double 双精度浮点(基本类型)
int 整型(基本类型)
long 长整型(基本类型)
short 短整型(基本类型)



super 父类,超类(变量引用)
this 本类(变量引用)

void 无返回值(变量引用)


goto 是关键字,但不能使用(保留关键字)
const 是关键字,但不能使用(保留关键字)

null 空(保留关键字)



java注释

java空行

空白行或有注释的行,java编译器都会忽略掉


继承

在java中,一个类可以由其他类派生.如果你要创建一个类,而且已经存在一个类具有你所需要的
属性或方法,你可以将新创建的类继承该类


利用继承的方法,可以重用已存在类的方法和属性,而不用重写这些代码，被继承的类称为超类(super class),派生类称为子类(subclass)

接口

在java中，接口可理解为对象间相互通信的协议。接口在继承中扮演着
重要角色。接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生了


java源程序与编译型运行的区别

编译型源程序--(编译连接)-->可执行程序exe--(执行)-->操作系统--裸机

java源程序(.java)---(编译)-->字节码程序(.class)--(解释执行)--解释器--操作系统--裸机

java是一种面向对象的语言


多态，继承，封装，抽象，类，对象，实力，方法，重载


对象：对象是类的一个实例

类：类是一个模板，它描述一类对象的行为和状态

boy,girl 为类class,而具体的每个人为该类的对象(object)

软件对象也有状态和行为。软件对象的而状态就是属性，行为通过方法体现

在软件开发中，方法操作对象内部状态的改变，对象的相互调用也是通过方法来完成


java中的类


类可以看成是创建java对象的模板



一个类可以包含以下类型变量：

局部变量：在方法，构造方法或语句块中定义的变量被称为局部变了。
变量声明和初始化都在方法中，方法结束后，变量就会自耦东销毁


成员变量：成员变量是定义在类中， 方法体之外的变量。这种变量在创建对象
的时候实例化。成员变量可以被类中方法，构造方法和特定类的语句块访问

类变量：类变量也声明在类中，方法体之外，但必须声明为static类型


一个类可以拥有多个方法，

构造方法

每个类都有构造方法。如果没有显式地为类定义构造方法，Java编译器将会
为该类提供一个默认构造方法


在创建一个对想的时候，至少要调用一个构造方法，构造方法的名称必须与类同名，
一个类可以有多个构造方法


创建对想

对象是根据类创建的。在java中，使用关键字new来创建一个新的对想

创建对象需要三步，声明---实例化----初始化


声明，声明一个对想，包括对象名称和对象类型
实例化，使用关键字new来创建一个对象
初始化，使用new创建对象时，会调用构造方法初始化对象



访问实例变量和方法

通过已经创建的对象来访问成员变量和成员函数

Object referenceVariable = new Constructor();

referenceVariable.variableName;

referenceVariable.methodName();




源文件声明规则

当一个源文件中定义多个类，并且还有

一个源文件中只能有一个public类
一个源文件可以有多个非public类

随便看看菜鸟教程！就过！




